// <auto-generated />
using EmbroideryThreadsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmbroideryThreadsApi.Migrations
{
    [DbContext(typeof(EmbroideryThreadsContext))]
    partial class EmbroideryThreadsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmbroideryThreadsApi.Models.Anchor", b =>
                {
                    b.Property<int>("AnchorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnchorId"));

                    b.Property<string>("AnchorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnchorNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.HasKey("AnchorId");

                    b.HasIndex("ColorId");

                    b.ToTable("Anchor");
                });

            modelBuilder.Entity("EmbroideryThreadsApi.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HexCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("ColorId");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            ColorName = "Fuschia",
                            HexCode = "9C599C"
                        },
                        new
                        {
                            ColorId = 2,
                            ColorName = "White",
                            HexCode = "FFFFFF"
                        });
                });

            modelBuilder.Entity("EmbroideryThreadsApi.Models.DMC", b =>
                {
                    b.Property<int>("DMCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DMCId"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("DMCName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMCNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DMCId");

                    b.HasIndex("ColorId");

                    b.ToTable("DMCs");
                });

            modelBuilder.Entity("EmbroideryThreadsApi.Models.Dimensions", b =>
                {
                    b.Property<int>("DimensionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DimensionsId"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("DimensionsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DimensionsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DimensionsId");

                    b.HasIndex("ColorId");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("EmbroideryThreadsApi.Models.Presencia", b =>
                {
                    b.Property<int>("PresenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PresenciaId"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("PresenciaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresenciaNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PresenciaId");

                    b.HasIndex("ColorId");

                    b.ToTable("Presencia");
                });

            modelBuilder.Entity("EmbroideryThreadsApi.Models.Anchor", b =>
                {
                    b.HasOne("EmbroideryThreadsApi.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("EmbroideryThreadsApi.Models.DMC", b =>
                {
                    b.HasOne("EmbroideryThreadsApi.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("EmbroideryThreadsApi.Models.Dimensions", b =>
                {
                    b.HasOne("EmbroideryThreadsApi.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("EmbroideryThreadsApi.Models.Presencia", b =>
                {
                    b.HasOne("EmbroideryThreadsApi.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });
#pragma warning restore 612, 618
        }
    }
}
